[1/11] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\esp-idf-v5.3.3\projects\hot_potato\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.10_env\Scripts\python.exe C:/esp-idf-v5.3.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/esp-idf-v5.3.3/projects/hot_potato/build/bootloader/bootloader.bin"
Bootloader binary size 0x68d0 bytes. 0x730 bytes (6%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/ir/ir_tx.cpp.obj
[5/11] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/ir/ir_rx_gpt.cpp.obj
[6/11] Linking C static library esp-idf\main\libmain.a
[7/11] Generating ld/sections.ld
[8/11] Building C object CMakeFiles/hot_potato.elf.dir/project_elf_src_esp32.c.obj
[9/11] Linking CXX executable hot_potato.elf
[10/11] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/esp-idf-v5.3.3/projects/hot_potato/build/hot_potato.bin
[11/11] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\esp-idf-v5.3.3\projects\hot_potato\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.10_env\Scripts\python.exe C:/esp-idf-v5.3.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/esp-idf-v5.3.3/projects/hot_potato/build/partition_table/partition-table.bin C:/esp-idf-v5.3.3/projects/hot_potato/build/hot_potato.bin"
hot_potato.bin binary size 0x51940 bytes. Smallest app partition is 0x100000 bytes. 0xae6c0 bytes (68%) free.
