[1/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/ir/ir_test_main.cpp.obj
[2/10] Linking C static library esp-idf\main\libmain.a
[3/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\esp-idf-v5.3.3\projects\hot_potato\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.10_env\Scripts\python.exe C:/esp-idf-v5.3.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/esp-idf-v5.3.3/projects/hot_potato/build/bootloader/bootloader.bin"
Bootloader binary size 0x68d0 bytes. 0x730 bytes (6%) free.
[4/10] No install step for 'bootloader'
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable hot_potato.elf
[8/10] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/esp-idf-v5.3.3/projects/hot_potato/build/hot_potato.bin
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\esp-idf-v5.3.3\projects\hot_potato\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.10_env\Scripts\python.exe C:/esp-idf-v5.3.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/esp-idf-v5.3.3/projects/hot_potato/build/partition_table/partition-table.bin C:/esp-idf-v5.3.3/projects/hot_potato/build/hot_potato.bin"
hot_potato.bin binary size 0x51af0 bytes. Smallest app partition is 0x100000 bytes. 0xae510 bytes (68%) free.
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\esp-idf-v5.3.3\components\esptool_py && C:\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/esp-idf-v5.3.3 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.3_py3.10_env/Scripts/python.exe;;C:/esp-idf-v5.3.3/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/esp-idf-v5.3.3/projects/hot_potato/build -P C:/esp-idf-v5.3.3/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 hot_potato.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.0
Serial port COM3
Connecting.....
Chip is ESP32-D0WDQ6-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 34:98:7a:b5:97:74
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00061fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26832 bytes to 16436...
Writing at 0x00001000... (50 %)
Writing at 0x00007882... (100 %)
Wrote 26832 bytes (16436 compressed) at 0x00001000 in 0.8 seconds (effective 276.0 kbit/s)...
Hash of data verified.
Compressed 334576 bytes to 178430...
Writing at 0x00010000... (9 %)
Writing at 0x0001cc75... (18 %)
Writing at 0x00025daf... (27 %)
Writing at 0x0002bb87... (36 %)
Writing at 0x0003202d... (45 %)
Writing at 0x00037bc7... (54 %)
Writing at 0x0003e6be... (63 %)
Writing at 0x0004497e... (72 %)
Writing at 0x0004a34f... (81 %)
Writing at 0x000509f8... (90 %)
Writing at 0x0005bd67... (100 %)
Wrote 334576 bytes (178430 compressed) at 0x00010000 in 4.2 seconds (effective 644.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 438.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
